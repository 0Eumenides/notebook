import{_ as e,M as p,p as o,q as c,R as n,t as s,N as l,a1 as a}from"./framework-e03faf0e.js";const i={},r=a(`<h1 id="启动器" tabindex="-1"><a class="header-anchor" href="#启动器" aria-hidden="true">#</a> 启动器</h1><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),u=n("li",null,"启动器就是一个个Springboot的启动场景",-1),d=n("code",null,"spring-boot-starter-web",-1),k={href:"https://docs.spring.io/spring-boot/docs/2.3.0.RELEASE/reference/html/using-spring-boot.html#using-boot-starter",target:"_blank",rel:"noopener noreferrer"},g=a(`<h1 id="主程序" tabindex="-1"><a class="header-anchor" href="#主程序" aria-hidden="true">#</a> 主程序</h1><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//@SpringBootApplication 标注这个类是一个springboot的应用：启动类下的所有资源被导入</span>
<span class="token annotation punctuation">@SpringBootApplication</span> 
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//将springboot应用启动</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">DemoApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function m(v,b){const t=p("ExternalLinkIcon");return o(),c("div",null,[r,n("ul",null,[u,n("li",null,[s("比如"),d,s("，会帮我们自动导入web环境所有的依赖，需要什么功能只需要找到对应的启动器就可以了，"),n("a",k,[s("启动器描述"),l(t)])])]),g])}const h=e(i,[["render",m],["__file","第一天.html.vue"]]);export{h as default};
