import{_ as l,M as s,p as h,q as c,R as e,t,N as o,V as a,a1 as i}from"./framework-e03faf0e.js";const d="/notebook/assets/vis_skeleton_pcd-e89f9950.gif",m="/notebook/assets/vis_2d_pose_depth-b9ffba09.gif",u={},$=i('<blockquote><p>Cao, Zhe, et al. &quot;Long-term human motion prediction with scene context.&quot; <em>Computer Vision–ECCV 2020: 16 th European Conference, Glasgow, UK, August 23–28, 2020, Proceedings, Part I 16</em>. Springer International Publishing, 2020.</p></blockquote><h1 id="出发点" tabindex="-1"><a class="header-anchor" href="#出发点" aria-hidden="true">#</a> 出发点</h1><p>现有的姿态预测问题都没有关注到<strong>场景信息</strong>，所以模型只能关注到骨架坐标等局部信息，难以做出包含更大的时空邻域的预测，因此在长期预测上表现都不好 本文模型框架在进行<strong>轨迹预测</strong>的基础上，进而进行<strong>姿态预测</strong>。 过去的轨迹预测使用物理力量、连续动态、隐马尔可夫模型或博弈论等方法也能取得不错的效果，但随着神经网络的兴起，场景和人物之间交互的多模态预测范式变得更加主流，但是他们都是使用鸟瞰图像或者已知的 3 D 信息，而本文使用多相机视角的图像 而过去的姿态预测则大都忽略了全局的环境因素，仅仅利用人体周围的局部图像环境来指导未来姿态的生成，这就容易导致预测的人体运动可能与场景不一致，例如，人可能会穿过墙壁行走。</p><hr><p>论文将动作预测的问题分为三个阶段：</p><ol><li>预测运动目标</li><li>规划每个目标之后的 3 D 路径</li><li>生成 3 D 姿态 <img src="https://raw.githubusercontent.com/0Eumenides/upic/main/2023/05/14/7oOO2k.jpg" alt="7oOO2k"></li></ol><h1 id="模型" tabindex="-1"><a class="header-anchor" href="#模型" aria-hidden="true">#</a> 模型</h1><p>令 $\\textbf{X}<em>{1:N}$ 为过去 $N$ 步的 2 D 姿态，$I$ 表示第 N 帧的场景，希望预测未来 $T$ 步 3 D 姿态，也就是 $\\textbf{Y}</em>{N+1:N+T}$ 设人体骨架包含 $J$ 个关节，因此 $\\textbf{X}\\in\\mathbb{R}^{J\\times2}$，$\\textbf{Y}\\in\\mathbb{R}^{J\\times3}$，$\\mathbf{X}^r$ 表示人体中心关节（躯干）的 2 D 坐标</p><hr><p>模型包括三个阶段：</p><ol><li><strong>GoalNet</strong>：在这个阶段，模型学习预测可能的人体运动目标，这些目标以图像空间中的 2 D 目的地来表示，基于 2 D 姿势历史和场景图像。</li><li><strong>PathNet</strong>：在这个阶段，模型学习计划通往每个目标的 3 D 路径，这是人体中心（躯干）的 3 D 位置序列，结合场景环境。这个路径考虑了环境约束，因此生成的运动路径更为合理。</li><li><strong>PoseNet</strong>：在这个阶段，模型预测每个时间步骤中，人体沿预测的 3 D 路径的 3 D 姿势。这样，得到的 3 D 人体运动具有全局移动，并考虑了周围场景，更为合理。 <img src="https://raw.githubusercontent.com/0Eumenides/upic/main/2023/05/14/cCDfY7.jpg" alt="cCDfY7"></li></ol><h2 id="goalnet" tabindex="-1"><a class="header-anchor" href="#goalnet" aria-hidden="true">#</a> GoalNet</h2>',12),b=e("em",null,"{1:N}^{1:J}$ 和场景图像 $I$ 获得潜在变量 $z$ 的分布 $$ \\mathbf{z}\\sim\\mathcal{Q}(\\mathbf{z}|\\mathbf{H}",-1),g=e("em",null,"{\\text{enc}}(\\mathbf{H}",-1),_=e("em",null,[t("{1:N}) $$ 模型的损失函数包含"),e("strong",null,"目的地预测的 $l_1$ 误差"),t("，和潜在变量 $z$ 估计的 "),e("strong",null,"KL 散度"),t(" $$ \\begin{aligned} L")],-1),p=e("em",null,"{N+T}^r-\\hat{\\textbf{X}}",-1),f=e("em",null,"1 \\ L",-1),N=e("em",null,"{1:N}^{1:J},\\text{I}\\big)||\\mathcal{N}(0,1)\\big] \\end{aligned} $$ 两个损失相加时的权重相同。在推理阶段，从潜在变量 $z$ （$\\mathcal N(\\textbf{0},\\textbf{1})$）中进行一组采样，结合场景图像 $I$ 就可以获得多个可能的 2 D 目的地 $\\hat{\\textbf{H}}^r",-1),D=e("img",{src:"https://raw.githubusercontent.com/0Eumenides/upic/main/2023/05/14/9ADgC5.jpg",alt:"9ADgC5"},null,-1),x=e("img",{src:"https://raw.githubusercontent.com/0Eumenides/upic/main/2023/05/14/6hSZFv.jpg",alt:"6hSZFv"},null,-1),E=i('<h2 id="pathnet" tabindex="-1"><a class="header-anchor" href="#pathnet" aria-hidden="true">#</a> PathNet</h2><p>前面预测的目标位置决定了移动的方向，而场景上下文决定了如何移动 在设计这个网络时，作者做了一个关键的决策，即不直接预测人体路径的 3 D 全局坐标值，而是将 3 D 路径表示为 2 D 路径热力图和人体中心随时间变化的深度值的组合。这种 3 D 路径表示方法有助于模型的训练。</p><ol><li><strong>预测目标位置</strong>：这一步的目标是预测人体的移动目标，即他们将移动到图像空间中的哪个位置。</li><li><strong>预测 3 D 路径</strong>：这一步的目标是预测人体的移动路径。这个路径是 3 D 的，包括每个时间步的人体中心位置。这个路径不仅取决于目标位置，也取决于场景的上下文。</li><li><strong>3 D 路径的表示</strong>：在这个方法中，3 D 路径不是直接表示为全局坐标值，而是表示为 2 D 路径热力图和人体中心的深度值的组合。2 D 路径热力图表示人体在图像平面上的移动，深度值表示人体在垂直于图像平面的方向上的移动。</li><li><strong>训练的便利性</strong>：这种 3 D 路径的表示方法更有利于模型的训练。因为热力图和深度值都可以用回归的方式来预测，这比直接预测 3 D 全局坐标值更容易。在作者的实验中，这种方法已经得到了验证。</li></ol>',3),T=e("em",null,"{1:N}^{1:J}$ 和 2 D 目的地 $\\hat{\\textbf{H}}^r",-1),P=i('<p>作者使用 Hourglass 54 作为 PathNet 的 backbone，该网络有两个分支，其中第一个分支预测 2 D 路径热图，第二个分支预测人体躯干的深度 <img src="https://raw.githubusercontent.com/0Eumenides/upic/main/2023/05/14/G45luE.jpg" alt="G45luE"> 损失函数为 <strong>2 D 路径预测误差</strong>和 <strong>3 D 路径误差</strong>，同时还需要惩罚连续帧之间的大位置变化 $$ L_{\\text{path2D}}=|\\mathbf{X}<em>{N+1:N+T}^r-\\hat{\\mathbf{X}}</em>{N+1:N+T}^r|<em>1 $$ $$ L</em>{\\text{path3D}}=|\\mathbf{Y}<em>{1:N+T}^r-\\hat{\\mathbf{Y}}</em>{1:N+T}^r|<em>1+|\\hat{\\mathbf{Y}}</em>{1:N+T-1}^r-\\hat{\\mathbf{Y}}_{2:N+T}|<em>1 $$ 在训练过程中，所有的损失函数都以相等的权重相加。在训练阶段，使用真实的目标位置（ground-truth destination）来训练 PathNet 模型。然而在测试阶段，他们可以使用 GoalNet 模型的预测结果作为目标位置 该模型共有随机、确定两种模式：第一种就是当前的模型，可以生成多个目的地；第二种是移除 GoalNet 和输入 $\\textbf{X}^r</em>{N+T}$，而使用一个确定的目的地，这样 PathNet 就会生成一个确定的 3 D 轨迹预测 <img src="https://raw.githubusercontent.com/0Eumenides/upic/main/2023/05/14/WlY5kO.jpg" alt="WlY5kO"></p><h2 id="posenet" tabindex="-1"><a class="header-anchor" href="#posenet" aria-hidden="true">#</a> PoseNet</h2>',2),B=e("em",null,"{1:N+T}^r$ 和 2 D 历史姿态 $X",-1),A=e("em",null,"{1:N}$，然后将 $\\bar{\\textbf{Y}}",-1),I=e("em",null,"{N+1:N+T}$，最后将整个 3 D 姿态 $\\bar{\\textbf{Y}}",-1),Y=e("em",null,"{N+1:N+T}=\\Psi(\\bar{\\textbf{Y}}",-1),G=e("em",null,"{N+1:N+T}-\\hat{\\mathbf{Y}}",-1),X=e("em",null,"1 $$ 在训练阶段，使用真实 (ground-truth)的 3 D 路径 $\\textbf{Y}",-1),k=e("img",{src:"https://raw.githubusercontent.com/0Eumenides/upic/main/2023/05/14/WWuYX8.jpg",alt:"WWuYX8"},null,-1),w=e("h1",{id:"数据集",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#数据集","aria-hidden":"true"},"#"),t(" 数据集")],-1),C=e("strong",null,"3 D 人体姿态标注相对嘈杂",-1),H=e("strong",null,"可交互物体有限",-1),j={href:"https://github.com/ZheC/GTA-IM-Dataset",target:"_blank",rel:"noopener noreferrer"},F=e("strong",null,"一百万",-1),L=e("strong",null,"98",-1),R=e("strong",null,"50",-1),M=e("strong",null,"10",-1),O=e("img",{src:d,alt:""},null,-1),q=e("img",{src:m,alt:""},null,-1),z=i('<h1 id="实验" tabindex="-1"><a class="header-anchor" href="#实验" aria-hidden="true">#</a> 实验</h1><h2 id="数据集-1" tabindex="-1"><a class="header-anchor" href="#数据集-1" aria-hidden="true">#</a> 数据集</h2><p><strong>GTA-IM</strong>：使用 8 个场景来训练，2 个场景来测试。在 98 个关节中选择 21 个，将三维路径和三维姿态转换为相机坐标帧，用于训练和评估 <strong>PROX</strong>：由 12 个不同的 3 D 场景和 20 个对象的 RGB 序列组成，这些对象在场景中移动并与场景互动。将数据集分成 52 个训练序列和 8 个用于测试的序列，并使用 18 个关节。</p><h2 id="设置" tabindex="-1"><a class="header-anchor" href="#设置" aria-hidden="true">#</a> 设置</h2><ul><li>输入图像大小和热力图大小为 256×448</li><li>输出未来热力图预测的分辨率为 64×112</li><li>所有深度维度值在训练过程中都被限制在 10 以内，并通过 4 进行归一化</li><li>分别训练所有 3 个模块（比联合训练效果更好）</li></ul><p><strong>GoalNet:</strong></p><ol><li>学习率设置为 10^(-4)，不使用权重衰减。</li><li>对于两个数据集，使用 128 的批量大小进行 2 个 epoch 的训练。</li></ol><p><strong>PathNet:</strong></p><ol><li>使用真实目标位置输入训练 PathNet，而在推理过程中，使用 GoalNet 的预测结果。</li><li>学习率设置为 2.5 × 10^(-4)，权重衰减为 10^(-4)。</li><li>对 GTA-IM 数据集进行 10 个 epoch 的训练，对 PROX 数据集进行 6 个 epoch 的训练，分别在第 7 个和第 4 个 epoch 时，学习率衰减为原来的10倍。</li><li>使用批量大小为 32。</li></ol><p><strong>PoseNet:</strong></p><ol><li>使用真实的 3 D 路径训练 PoseNet，而在推理过程中，使用 PoseNet 的预测结果。</li><li>使用学习率为 1 × 10^(-3)进行 80 个 epoch 的训练。</li><li>注意力丢失率为 0.2。</li><li>批量大小为 1024。</li></ol><h2 id="方法比较" tabindex="-1"><a class="header-anchor" href="#方法比较" aria-hidden="true">#</a> 方法比较</h2><p><strong>评价指标</strong>：将 Mean Per Joint Position Error (MPJPE)，计算预测的 3 D 关节位置和对应的真实关节位置之间的欧氏距离的平均值，作为评价指标来评估预测的 3 D 路径和姿态 在<strong>GTA-IM</strong>数据集上，模型的确定模式取得了最好的表现，且拉了其他方法一大截。而对于随机模式，选择一个损失最小的目的地，作者通过尝试生成不同数量的目的地，发现当生成 4 个可能的目的地时，模型表现可以接近确定模式，当生成 10 个可能的目的地时，模型表现已经开始优于确定模式</p><ol><li>他们首先进行了一个实验，直接回归 3 D 坐标（&quot;Ours w/ xyz.&quot;），结果发现总误差比确定性模型（&quot;deterministic model&quot;）高出 18 毫米。这验证了将 3 D 路径表示为人体中心的深度和 2 D 热图的方法更好，因为这种表示与图像外观有很强的相关性。</li><li>他们也进行了一些输入变量的消融实验。如果不输入图像，平均误差会高出 23 毫米。如果只输入遮罩图像，即将人体裁剪外的像素替换为 ImageNet 的平均像素值，误差会高出 16 毫米。这验证了使用全图像来编码场景上下文比仅观察裁剪的人体图像更有帮助，尤其是对于长期预测。</li><li>使用颜色和深度图像作为输入（&quot;Ours w/ RGBD input&quot;），平均误差为 172 毫米，与仅使用 RGB 输入的模型相近。这表明他们的模型隐含地从 2 D 输入中学习推理深度信息。</li><li>如果使用真实的 2 D 目标而不是预测的目标，总误差会降低到 137 毫米。这说明未来目标的不确定性是这个问题的主要难点。 <img src="https://raw.githubusercontent.com/0Eumenides/upic/main/2023/05/14/iKbdwH.jpg" alt="iKbdwH"></li></ol><hr><p><strong>PROX</strong>数据集是一种真实世界的数据集，比 GTA-IM 更具挑战性，因为未来的运动不确定性更大。</p><ol><li>表 2 的评估结果显示，他们的方法在所有时间步的平均 MPJPE 方面超过了之前的最优结果，从 282 毫米降到了 270 毫米。</li><li>在 GTA-IM 数据集的比较中，他们得出的结论在 PROX 数据集中也得到了验证。当在推理过程中使用抽样时，进行三次抽样的推理性能可以超过确定性模型（264 毫米对比 270 毫米），当进行十次抽样时，误差进一步降低到 249 毫米。在 PROX 数据集上的这些改进比在 GTA-IM 基准测试中观察到的更为显著，原因是真实数据集中未来运动的不确定性更大，因此随机预测有更大的优势。</li><li>他们发现，在 GTA-IM 数据集上进行预训练可以获得更好的性能（270 毫米对比 280 毫米）。他们的方法利用了图像上下文，并且在 PROX 数据集上倾向于过拟合，因为在摄像机姿势和背景外观（在每个视频序列中都是恒定的）方面，该数据集的多样性较差。在他们具有多样外观和清晰注释的合成数据集上进行预训练，可以帮助防止过拟合，提高最终性能。 <img src="https://raw.githubusercontent.com/0Eumenides/upic/main/2023/05/14/9HbuNz.jpg" alt="9HbuNz"></li></ol><h2 id="长期预测" tabindex="-1"><a class="header-anchor" href="#长期预测" aria-hidden="true">#</a> 长期预测</h2><p><img src="https://raw.githubusercontent.com/0Eumenides/upic/main/2023/05/14/WdDCUT.jpg" alt="WdDCUT"> 随机模型可以通过使用 5 个样本击败他们的确定性模型。随着样本数量的增加，测试误差相应地减小。在预测的后期阶段，确定性结果和随机结果之间的误差差距变得更大，即在 3 秒的时间步长上，差距超过 100 毫米。这表明随机模型在长期未来运动预测中的优势。</p><h2 id="讨论失败案例" tabindex="-1"><a class="header-anchor" href="#讨论失败案例" aria-hidden="true">#</a> 讨论失败案例</h2><p>本模型通过从大量训练数据中以数据驱动的方式隐含地学习场景约束，并且能产生相较于之前没有考虑场景上下文的方法更一致的 3 D 人体路径，且没有严重的碰撞，这表明模型能够理解和应用场景约束，以此产生在现实场景中更可能发生的人体运动 然而，由于他们的模型并未假设已经接触到预先重建的 3 D 网格，所以产生的 3 D 姿态可能不会严格满足 3 D 场景几何的所有物理约束。 因此作者认为这个问题可以通过将多视角/时间序列图像作为输入来解决，以更好地恢复 3 D 场景。结果的 3 D 场景可以进一步用来强制执行明确的场景几何约束，以优化 3 D 姿态。这是他们将来的工作方向。</p>',21);function J(V,v){const n=s("RouterLink"),r=s("ExternalLinkIcon");return h(),c("div",null,[$,e("p",null,[t("为了理解人类的长期运动，我们必须根据目的地进行推理。而不是采用自回归模型来逐步生成姿势 $\\hat{\\textbf{X}}^r_{N+T}$ 表示可能的 2 D 目的地，将关节坐标 $\\mathbf{X}^j$ 表示成热力图 $H^j$，热力图是以关节坐标为中心的高斯分布采样，以保持与图像上下文的空间相关性。 GoalNet 使用变分自编码器（"),o(n,{to:"/%E7%A7%91%E7%A0%94/%E6%96%B9%E6%B3%95%E6%A6%82%E8%BF%B0/VAE.html"},{default:a(()=>[t("VAE")]),_:1}),t("）来实现，模型编码器输入热力图 $\\textbf{H}"),b,t("{1:N}^{1:J},\\mathbf{I})\\equiv\\mathcal{N}(\\boldsymbol{\\mu},\\boldsymbol{\\sigma}),\\text{where}\\boldsymbol{\\mu},\\boldsymbol{\\sigma}=\\mathcal{F}"),g,t("{1:N}^{1:J},\\mathbf{I}) $$ 然后通过采用潜在变量 $z$ ，并结合场景图像 $I$ 输入解码器中，输出目标的目的地热力图 $$ \\hat{\\textbf{H}}^r_{N+T}=\\mathcal{F}"),e("em",null,[t("{\\text{dec}}(\\textbf{z},\\textbf{I}) $$ 有了热力图，就可以通过 "),o(n,{to:"/%E7%A7%91%E7%A0%94/%E6%96%B9%E6%B3%95%E6%A6%82%E8%BF%B0/soft-argmax.html"},{default:a(()=>[t("soft-argmax")]),_:1}),t("，来获得最终的 2 D 目的地 $\\hat{\\textbf{X}}^r")]),t("{N+T}$ ，因此对于整个 GoalNet，有： $$ \\hat{\\textbf{H}}^r_{N+T}=\\mathcal{F}(\\textbf{I},\\textbf{H}^{1:j}"),_,t("{\\text{dest2D}}& =|\\textbf{X}"),p,t("{N+T}^r|"),f,t("{\\text{KL}}& =\\text{KL}\\big[\\mathcal{Q}\\big(\\text{z}|\\text{H}"),N,t("{N+T}$。 "),D,x]),E,e("p",null,[t("因此 PathNet $\\phi$ 使用场景图像 $I$ 、2 D 姿态历史 $\\textbf{H}"),T,t("{N+T}$ 作为输入，预测 3 D 路径，表示成 $(\\hat{\\textbf{H}}^r_{N+1:N+T},\\hat{\\textbf{d}}^r_{1:N+T})$，$\\hat{\\textbf{d}}^r_{t}$ 表示人体中心在 $t$ 时刻的深度 $$ \\hat{\\textbf{H}}^r_{N+1:N+T},\\hat{\\textbf{d}}^r_{1:N+T}=\\phi(\\textbf{I},\\textbf{X}^1_{1:N},\\textbf{X}^r_{N+T}) $$ 最后通过利用相机内参 K 通过"),o(n,{to:"/%E7%A7%91%E7%A0%94/%E6%96%B9%E6%B3%95%E6%A6%82%E8%BF%B0/%E5%8F%8D%E6%8A%95%E5%BD%B1%EF%BC%88back-projecting%EF%BC%89.html"},{default:a(()=>[t("反投影（back-projecting）")]),_:1}),t("来获得最终的 3 D 路径 $\\hat{\\textbf{Y}}^r_{1:N+T}$")]),P,e("p",null,[t("有了预测的 3 D 路径 $\\mathbf{Y}"),B,t("{1: N}$，使用 transformer 作为 PoseNet $\\Psi$ 模型来预测 3 D 姿态 作者将历史 2 D 姿态、人体躯干深度和相机内参 K 通过 "),o(n,{to:"/%E7%A7%91%E7%A0%94/%E6%96%B9%E6%B3%95%E6%A6%82%E8%BF%B0/%E5%8F%8D%E6%8A%95%E5%BD%B1%EF%BC%88back-projecting%EF%BC%89.html"},{default:a(()=>[t("反投影（back-projecting）")]),_:1}),t("来获得带有噪声的 3 D 姿态 $\\bar{\\textbf{Y}}"),A,t("{N}$ 重复复制到每个预测的未来 3 D 路径位置，来初步估计未来 3 D 姿态 $\\bar{\\textbf{Y}}"),I,t("{1:N+T}$ 输入到 PoseNet $$ \\hat{\\textbf{Y}}"),Y,t("{1:N+T}) $$ PoseNet 的训练目标是最小化 3 D 姿态预测与 ground-truth 之间的距离，其定义为： $$ L_{\\text{pose3D}}=|\\mathbf{Y}"),G,t("{N+1:N+T}|"),X,t("{1:N+T}^r$，来估计 3 D 姿态输入。在推理阶段，则使用 PathNet 预测的 $\\mathbf{Y}_{1:N+T}^r$ "),k]),w,e("p",null,[t("现有的真实人-场景交互数据集的"),C,t("，并且由于深度传感器的限制，长范围的人体运动数据有限。另一方面，现有的合成人体数据集主要关注人体姿态估计或部分分割任务，并且在开阔的户外场景中采样数据，这些场景的"),H,t("。 为了解决上述问题，作者们进行了大量工作，通过开发一个与游戏引擎交互的接口，以全自动的方式控制角色、相机和行动任务，收集了一个合成数据集。对于每个角色，他们在 3 D 场景中随机设置目标地点，确定特定的任务、行走风格和移动速度。他们通过改变不同的天气条件和白天时间来控制光照条件。他们还多样化了相机的位置和视角，使其围绕演员在一个球体上变化，并始终指向演员。他们使用游戏内的光线追踪 API 和同步的人体分割图来跟踪演员。收集的动作包括上楼梯、躺下、坐下、开门等在室内场景中的基本活动。例如，角色有 22 种行走风格，包括 10 种女性和 12 种男性的行走风格。 "),e("a",j,[t("数据集"),o(r)]),t("包含了"),F,t("帧 RGBD 图像，分辨率为 1920×1080，每帧都有真实的 2 D/3 D 人体姿态（"),L,t("个关节）、深度图、人体分割和相机姿态的标注。这个数据集包含了"),R,t("个人物角色在"),M,t("个不同的大型室内场景中的行为。每个场景都有几层楼，包括客厅、卧室、厨房、阳台等，可以进行多种交互活动。 "),O,q]),z])}const W=l(u,[["render",J],["__file","Long-term Human Motion Prediction with Scene Context.html.vue"]]);export{W as default};
